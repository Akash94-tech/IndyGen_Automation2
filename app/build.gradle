/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "io.qameta.allure-report" version "2.11.2"
    id "io.qameta.allure-adapter" version "2.11.2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Define the version of Allure you want to use via the allureVersion property
def allureVersion = "2.24.0"
// Define the version of AspectJ
def aspectJVersion = "1.9.20.1"

// Define configuration for AspectJ agent
configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation libs.testng

    // This dependency is used by the application.
    implementation libs.guava
    testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.7.0'
    implementation 'org.apache.kafka:kafka-clients:3.7.0'
    implementation 'org.apache.kafka:kafka-streams:3.7.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'org.apache.kafka:kafka-clients:3.3.2'
    implementation 'com.opencsv:opencsv:3.7'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'commons-io:commons-io:2.16.1'

    implementation 'io.qameta.allure:allure-testng:2.27.0'

    // Import allure-bom to ensure correct versions of all the dependencies are used
    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    // Add necessary Allure dependencies to dependencies section
    testImplementation "io.qameta.allure:allure-testng"

    // Add aspectjweaver dependency
    agent "org.aspectj:aspectjweaver:$aspectJVersion"
 
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'ai.indygen.dev.TestApp'
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG() {
        
    }
}

// Configure javaagent for test execution
test {
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}
